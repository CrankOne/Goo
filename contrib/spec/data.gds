
(#
 # Basic data
 #)

#
# Simple variables
Int8    iA = 1;     # explicit type specialization
UInt16  iB = 42;    # another explicit type specialization
        iC = '\b';  # atomatic type deduction (Int32) with escseq parsing

fA, fB = 1.28, 7;   # parallel assignment, both variables type is Float16
Float8 fC = 4.56,
       fD = 8.97;   # explicit type, both variables type is Float8
#Float8 fE, FF, FD = 1.28, 9.67;  # forbidden! -- mixing constant declaration notations.

#
# Arrays
a = { 42, 7/3, 0xf1 };          # produces positional array
b = { foo: 12, bar: 13 };       # produces named array (hashtable)
#c = { 42, 17, foo : 24 };      # forbidden! -- Mixing array declaration notations.

(#

#
# Data structures
Geometry::point pt1 = {-0.5, -0.5},
                pt2 = { 0.5,  0.5};

Geometry::rect  rct = {pt1, pt2},   # constructs rectangle from pt1 to pt2
                rct2 = pt2;         # constructs rectangle {-0.25, -0.25} - {0.25, 0.25}


(#
 # Mathematical functions
 #)

f1(x) <- M::exp(x^2);
f1(iA) <- M::exp(iA^2); # Causes warning 'shadowing'
#f2(y) <- M::exp(x^2);  # Causes 'unknown identifier in math expr'.

fVar = (f(x) <- x/2);   # Internally, all variable names are turned in positional
                        # arguments, so function names aren't actually meaningful
                        # anywhere otside the function body.

piecewiseF1(x)  <- x >  0 ? M::log(x)
                |- x < -1 ? 0
                |- M::NaN;

#)

