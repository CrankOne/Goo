# ifndef H_GOO_CONFIG_H
# define H_GOO_CONFIG_H

/*
 * Copyright (c) 2016 Renat R. Dusaev <crank@qcrypt.org>
 * Author: Renat R. Dusaev <crank@qcrypt.org>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/*
 * Features
 * (do not forget to append description and encoder macros at
 *  goo_versioning.c)
 */

#cmakedefine TYPES_128BIT_LENGTH    0
#cmakedefine SOURCE_POSITION_INFO   1
#cmakedefine EM_STACK_UNWINDING     2
#cmakedefine ANSI_ESCSEQ_PRINT      3
#cmakedefine ENABLE_GDS             4

#cmakedefine ZLIB_FOUND             0
#cmakedefine LZO_FOUND              1
#cmakedefine BZIP2_FOUND            2
#cmakedefine PNG_FOUND              3
#cmakedefine FLTK_FOUND             4
#cmakedefine GIT_FOUND              5
#cmakedefine OPENGL_FOUND           6
#cmakedefine OPENGL_GLU_FOUND       7

# define GOO_BUILD_C_FLAGS          @CMAKE_C_FLAGS@
# define GOO_BUILD_CXX_FLAGS        @CMAKE_CXX_FLAGS@
# define GOO_CXX_COMPILER           @CMAKE_CXX_COMPILER@
# define GOO_C_COMPILER             @CMAKE_C_COMPILER@
# define GOO_CMAKE_INSTALL_PREFIX   @CMAKE_INSTALL_PREFIX@
# define GOO_BUILDER_HOSTNAME       @BUILDER_HOSTNAME@
# define GOO_CMAKE_SYSTEM           @CMAKE_SYSTEM@
# define GOO_BUILD_TYPE             @CMAKE_BUILD_TYPE@

/*
 * Versioning
 */

# define GOO_VERSION_MAJOR @Goo_VERSION_MAJOR@
# define GOO_VERSION_MINOR @Goo_VERSION_MINOR@
# define GOO_VERSION_PATCH @Goo_VERSION_PATCH@

# define BUILD_TIMESTAMP @BUILD_TIMESTAMP@
# ifdef GIT_FOUND
#  define  COMMIT_HASH "@COMMIT_HASH@"
#  define  GIT_STRING R"(@GIT_STRING@)"
# else
#  define  COMMIT_HASH "<unavailible>"
#  define  GIT_STRING  "<unavailible>"
# endif

# ifndef PACKAGE
#   define PACKAGE Goo
#   define PACKAGE_VERSION GOO_VERSION_MAJOR GOO_VERSION_MINOR
# endif

/*
 * Feature-dependent constants
 */

# ifndef GOO_EMERGENCY_BUFLEN
#   define GOO_EMERGENCY_BUFLEN (256*1024)
# endif

# ifndef GOO_EMERGENCY_STACK_DEPTH_NENTRIES
#   define GOO_EMERGENCY_STACK_DEPTH_NENTRIES 16
# endif

# ifndef GOO_DEFAULT_ZLIB_COMPRESSION_LEVEL
#   define GOO_DEFAULT_ZLIB_COMPRESSION_LEVEL 9
# endif

# ifndef GDS_PARSER_EXPR_REPLICA_BUF_LENGTH
#   define GDS_PARSER_EXPR_REPLICA_BUF_LENGTH 1024
# endif

# ifndef GDS_PARSER_NSCOPES
#   define GDS_PARSER_NSCOPES 128
# endif

# ifndef GDS_PARSER_STRING_BUF_LEN
#   define GDS_PARSER_STRING_BUF_LEN 1024*1024
# endif

# ifdef __cplusplus
# include <stdexcept>
# endif

# ifdef __cplusplus
namespace goo {
namespace g3D {
typedef @GOO3D_REAL_TYPE@ Real;
}
}
# else
typedef @GOO3D_REAL_TYPE@ goo_g3D_Real_t;
# endif

/*
 * Streaming parameters
 */
# ifdef ENABLE_DATASTREAMS
#   define GOO_STREAMS_DEFAULT_SIZE       GOO_SIZE_TYPE
#   define GOO_STREAMS_DEFAULT_POSITION   GOO_SIZE_TYPE
# endif

/*
 * Found system utils
 */

/// When defined, contains stringified path to gdb debugger exec.
#cmakedefine GOO_GDB_EXEC       "@GOO_GDB_EXEC@"

/// When defined, contains stringified path to gcore exec.
#cmakedefine GOO_GCORE_EXEC     "@GOO_GCORE_EXEC@"

# endif /* H_GOO_CONFIG_H */

